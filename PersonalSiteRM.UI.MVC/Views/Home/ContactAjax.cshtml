@model PersonalSiteRM.UI.MVC.Models.ContactViewModel


@using (Html.BeginForm("", "", FormMethod.Post, new { id = "ContactCreateForm" }))
{
    @Html.AntiForgeryToken()
    <section id="contact" class="contact">
        <div class="container">
            <div class="col-lg-7 d-flex align-items-stretch">
                <div class="info">
                    <form class="d-flex flex-column w-100" id="ContactCreateForm" method="post">
                        <div class="form-horizontal">

                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group" style="padding:1em">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group" style="padding:1em">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group" style="padding:1em">
                                @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group" style="padding:1em">
                                @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Message, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" row="10" value="Send Me A Message" class="offset-md-3 btn btn-xl text-uppercase push-md-4" style="margin-right:10em" />
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </section>
}

@if (ViewBag.CustomerMessage != null)
{
    //html.raw() translates the html instead of rendering as text
    <h4>@Html.Raw(ViewBag.CustomerMessage)</h4>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
